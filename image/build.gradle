plugins {
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

archivesBaseName = 'image'
version = '0.0.1-SNAPSHOT'


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

bootJar {
    layered {
        application {
            intoLayer("spring-boot-loader") {
                include "org/springframework/boot/loader/**"
            }
            // 自定义 static 层，存放静态文件
            intoLayer("static") {
                include "static/**"
            }
            intoLayer("application")
        }
        dependencies {
            intoLayer("snapshot-dependencies") {
                include "*:*:*SNAPSHOT"
            }
            intoLayer("dependencies")
        }
        layerOrder = ["dependencies", "spring-boot-loader", "snapshot-dependencies", "static", "application"]
    }
}

bootBuildImage {
    builder = "docker.io/hellowoodes/buildpacks-builer:base-platform-api-0.3"
    runImage = "docker.io/hellowoodes/buildpacks-run:base-cnb"
    imageName = "docker.mobike.io/${archivesBaseName}:${version}"
    environment = [
            "TZ"       : "Asia/Shanghai",
            "JAVA_OPTS": "-Djava.security.egd=file:/dev/./urandom"
    ]
}